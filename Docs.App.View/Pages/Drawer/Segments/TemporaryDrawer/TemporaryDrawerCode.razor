@namespace Skclusive.Material.Docs.App.View
@inherits MaterialComponentBase

<MarkdownCode
    Class="@_Class"
    Style="@_Style"
    Text="@(@"
```html
<div>
    <Button
        OnClick=""@OpenLeft"">
        Open Left
    </Button>
    <Button
        OnClick=""@OpenRight"">
        Open Right
    </Button>
    <Button
        OnClick=""@OpenTop"">
        Open Top
    </Button>
    <Button
        OnClick=""@OpenBottom"">
        Open Bottom
    </Button>
    <Drawer
        Open=""@Left""
        OnClose=""@CloseLeft"">
        <DrawerList
            Side
            OnClick=""@CloseLeft""
            OnKeyDown=""@CloseLeft"" />
    </Drawer>
    <Drawer
        Anchor=""@Anchor.Top""
        Open=""@Top""
        OnClose=""@CloseTop"">
        <DrawerList
            OnClick=""@CloseTop""
            OnKeyDown=""@CloseTop"" />
    </Drawer>
    <Drawer
        Anchor=""@Anchor.Bottom""
        Open=""@Bottom""
        OnClose=""@CloseBottom"">
        <DrawerList
            OnClick=""@CloseBottom""
            OnKeyDown=""@CloseBottom"" />
    </Drawer>
    <Drawer
        Anchor=""@Anchor.Right""
        Open=""@Right""
        OnClose=""@CloseRight"">
        <DrawerList
            Side
            OnClick=""@CloseRight""
            OnKeyDown=""@CloseRight"" />
    </Drawer>
</div>
```

```csharp
@code
{
    private bool Left { set; get; }

    private bool Right { set; get; }

    private bool Top { set; get; }

    private bool Bottom { set; get; }

    private void OpenLeft()
    {
        Left = true;

        StateHasChanged();
    }

    private void CloseLeft()
    {
        Left = false;

        StateHasChanged();
    }

    private void OpenRight()
    {
        Right = true;

        StateHasChanged();
    }

    private void CloseRight()
    {
        Right = false;

        StateHasChanged();
    }

    private void OpenTop()
    {
        Top = true;

        StateHasChanged();
    }

    private void CloseTop()
    {
        Top = false;

        StateHasChanged();
    }

    private void OpenBottom()
    {
        Bottom = true;

        StateHasChanged();
    }

    private void CloseBottom()
    {
        Bottom = false;

        StateHasChanged();
    }
}
```
")" />