@namespace Skclusive.Material.Docs.App.View

<MarkdownSegment
    Text="@(@"
# Switch API

<p class=""description"">The API documentation of the Switch component. Learn more about the parameters and the CSS customization points.</p>

## Parameters

| Name | Type | Default | Description |
|:-----|:-----|:--------|:------------|
| <span class=""prop-name"">RootRef</span> | <span class=""prop-type"">IReference</span> | <span class=""prop-default"">new Reference()</span> | The reference used to ref the root node. |
| <span class=""prop-name"">Class</span> | <span class=""prop-type"">string</span> | | The class applied to the root node. |
| <span class=""prop-name"">Style</span> | <span class=""prop-type"">string</span> | | The style applied to the root node. |
| <span class=""prop-name"">Component</span> | <span class=""prop-type"">string</span> | <span class=""prop-default"">'span'</span> | The component used for the root node. |
| <span class=""prop-name"">ReadOnly</span> | <span class=""prop-type"">bool</span> |  | It prevents the user from changing the value of the field. |
| <span class=""prop-name"">Checked</span> | <span class=""prop-type"">bool?</span> |  | If `true`, the component is checked. |
| <span class=""prop-name"">DefaultChecked</span> | <span class=""prop-type"">bool?</span> |  | when input is checked default. |
| <span class=""prop-name"">CheckedIcon</span> | <span class=""prop-type"">RenderFragment</span> |  | The icon to display when the component is checked. |
| <span class=""prop-name"">Color</span> | <span class=""prop-type"">Color.Primary<br>&#124;&nbsp;Color.Secondary<br>&#124;&nbsp;Color.Default</span> | <span class=""prop-default"">Color.Secondary</span> | The color of the component. It supports those theme colors that make sense for this component. |
| <span class=""prop-name"">Disabled</span> | <span class=""prop-type"">bool?</span> |  | If `true`, the switch will be disabled. |
| <span class=""prop-name"">DisableRipple</span> | <span class=""prop-type"">bool</span> |  | If `true`, the ripple effect will be disabled. |
| <span class=""prop-name"">Edge</span> | <span class=""prop-type"">Edge.Start<br>&#124;&nbsp;Edge.End<br>&#124;&nbsp;Edge.None</span> | <span class=""prop-default"">Edge.None</span> | If given, uses a negative margin to counteract the padding on one side (this is often helpful for aligning the left or right side of the icon with content above or below, without ruining the border size and shape). |
| <span class=""prop-name"">Icon</span> | <span class=""prop-type"">RenderFragment</span> |  | The icon to display when the component is unchecked. |
| <span class=""prop-name"">Id</span> | <span class=""prop-type"">string</span> |  | The id of the `input` element. |
| <span class=""prop-name"">Name</span> | <span class=""prop-type"">string</span> |  | The name of the `input` element. |
| <span class=""prop-name"">OnChange</span> | <span class=""prop-type"">EventCallback&lt;ChangeEventArgs&gt;</span> |  | Callback fired when the state is changed.<br><br>**Signature:**<br>`function(event: object) => void`<br>*event:* The event source of the callback. You can pull out the new checked state by accessing `event.target.checked` (boolean). |
| <span class=""prop-name"">Required</span> | <span class=""prop-type"">bool?</span> |  | If `true`, the `input` element will be required. |
| <span class=""prop-name"">Size</span> | <span class=""prop-type"">Size.Small<br>&#124;&nbsp;Size.Medium</span> | <span class=""prop-default"">Size.Medium</span> | The size of the switch. `Size.Small` is equivalent to the dense switch styling. |
| <span class=""prop-name"">Value</span> | <span class=""prop-type"">string</span> |  | The value of the component. The DOM API casts this to a string. |
| <span class=""prop-name"">SwitchBaseStyle</span> | <span class=""prop-type"">string</span> | | the `style` applied on the switch base element. |
| <span class=""prop-name"">SwitchBaseClass</span> | <span class=""prop-type"">string</span> | |  the `class` applied on the switch base element. |
| <span class=""prop-name"">ThumbStyle</span> | <span class=""prop-type"">string</span> | | the `style` applied on the thumb element. |
| <span class=""prop-name"">ThumbClass</span> | <span class=""prop-type"">string</span> | |  the `class` applied on the thumb element. |
| <span class=""prop-name"">TrackStyle</span> | <span class=""prop-type"">string</span> | | the `style` applied on the track element. |
| <span class=""prop-name"">TrackClass</span> | <span class=""prop-type"">string</span> | |  the `class` applied on the track element. |
| <span class=""prop-name"">InputStyle</span> | <span class=""prop-type"">string</span> | | the `style` applied on the input element. |
| <span class=""prop-name"">InputClass</span> | <span class=""prop-type"">string</span> | |  the `class` applied on the input element. |
| <span class=""prop-name"">CheckedStyle</span> | <span class=""prop-type"">string</span> | | the `style` applied on the checked element. |
| <span class=""prop-name"">CheckedClass</span> | <span class=""prop-type"">string</span> | |  the `class` applied on the checked element. |
| <span class=""prop-name"">DisabledClass</span> | <span class=""prop-type"">string</span> | |  the `class` applied when the element is disabled. |
| <span class=""prop-name"">InputProps</span> | <span class=""prop-type"">Dictionary&lt;string, object&gt;</span> | | `attributes` passed to the Input component. |

## CSS

- Style name: `Switch`.
- Style details:

| Global class | Description |
|:-------------|:------------|
| <span class=""prop-name"">Switch-Root</span> | Styles applied to the root element.
| <span class=""prop-name"">Switch-Edge-Start</span> | Styles applied to the root element if `Edge=""@Edge.Start""`.
| <span class=""prop-name"">Switch-Edge-End</span> | Styles applied to the root element if `Edge=""@Edge.End""`.
| <span class=""prop-name"">Switch-SwitchBase</span> | Styles applied to the internal `SwitchBase` component's `root` class.
| <span class=""prop-name"">Switch-Color-Primary</span> | Styles applied to the internal SwitchBase component's root element if `Color=""@Color.Primary""`.
| <span class=""prop-name"">Switch-Color-Secondary</span> | Styles applied to the internal SwitchBase component's root element if `Color=""@Color.Secondary""`.
| <span class=""prop-name"">Switch-Size-Small</span> | Styles applied to the root element if `Size=""@Size.Small""`.
| <span class=""prop-name"">Switch-Checked</span> | Pseudo-class applied to the internal `SwitchBase` component's `Checked` class.
| <span class=""prop-name"">Switch-Disabled</span> | Pseudo-class applied to the internal SwitchBase component's disabled class.
| <span class=""prop-name"">Switch-Input</span> | Styles applied to the internal SwitchBase component's input element.
| <span class=""prop-name"">Switch-Thumb</span> | Styles used to create the thumb passed to the internal `SwitchBase` component `Icon` prop.
| <span class=""prop-name"">Switch-Track</span> | Styles applied to the track element.

")" />
