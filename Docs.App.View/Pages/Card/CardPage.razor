@namespace Skclusive.Material.Docs.App.View
@page "/card"

<div>
    <Markdown
         Text="@(@"
---
title: Card Blazor component
components: Card
---

---
title: Card Blazor component
components: Card, CardActionArea, CardActions, CardContent, CardHeader, CardMedia, Collapse, Paper
---

# Cards

<p class=""description"">Cards contain content and actions about a single subject.</p>

[Cards](https://material.io/design/components/cards.html) are surfaces that display content and actions on a single topic.

They should be easy to scan for relevant and actionable information. Elements, like text and images, should be placed on them in a way that clearly indicates hierarchy.

## Installing with Nuget

You can [install Card package](https://www.nuget.org/packages/Skclusive.Material.Card/) by typing the below command in your terminal:

`dotnet add package Skclusive.Material.Card`

Then, you can import it in your _Imports.razor.

```csharp
@using Skclusive.Material.Card;
```

## Simple Card

Although cards can support multiple actions, UI controls, and an overflow menu, use restraint and remember that cards are entry points to more complex and detailed information.

{{""demo"": ""Skclusive.Material.Docs.App.View.SimpleCard, Skclusive.Material.Docs.App.View""}}

## Complex Interaction

On desktop, card content can expand.

{{""demo"": ""Skclusive.Material.Docs.App.View.RecipeReviewCard, Skclusive.Material.Docs.App.View""}}

## Media

Example of a card using an image to reinforce the content.

{{""demo"": ""Skclusive.Material.Docs.App.View.MediaCard, Skclusive.Material.Docs.App.View""}}

By default, we use the combination of a `<div>` element and a *background image* to display the media. It can be problematic in some situations. For instance, you might want to display a video or a responsive image. Use the `component` property for these use cases:

{{""demo"": ""Skclusive.Material.Docs.App.View.ImgMediaCard, Skclusive.Material.Docs.App.View""}}

> ⚠️ When `component=""img""`, CardMedia relies on `object-fit` for centering the image. It's not supported by IE 11.

## UI Controls

Supplemental actions within the card are explicitly called out using icons, text, and UI controls, typically placed at the bottom of the card.

Here's an example of a media control card.

{{""demo"": ""Skclusive.Material.Docs.App.View.MediaControlCard, Skclusive.Material.Docs.App.View""}}

")" />
</div>