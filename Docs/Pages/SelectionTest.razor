@page "/selection"

<Checkbox Checked="@Checked"
          Value="checkedA"
          OnChange="@OnChecked" />

<div style="padding-top: 48px; padding-left: 24px; padding-right: 24px; padding-bottom: 24px;">
    <FormControl Component="fieldset">
        <FormLabel Component="legend">Assign responsibility</FormLabel>
        <FormGroup>
            <FormControlLabel Label="Indeterminate">
                <ControlContent Context="Control">
                    <Checkbox Checked="@Checked"
                          OnChange="@OnChecked"
                          Value="checkedF"
                          Indeterminate />
                </ControlContent>
            </FormControlLabel>
            <FormControlLabel Label="Custom Icon">
                <ControlContent Context="Control">
                    <Checkbox Checked="@Checked"
                              OnChange="@OnChecked"
                              Icon="@Icon"
                              CheckedIcon="@CheckedIcon"
                              Value="checkedH" />
                </ControlContent>
            </FormControlLabel>
            <FormControlLabel Label="Switch">
                <ControlContent Context="Control">
                    <Switch Checked="@Checked"
                              OnChange="@OnChecked"
                              Value="checkedS" />
                </ControlContent>
            </FormControlLabel>
        </FormGroup>
        <FormHelperText>Be careful</FormHelperText>
    </FormControl>
</div>

@code {

bool Checked { set; get; } = false;

void OnChecked(EventArgs args)
{
    Checked = !Checked;

    Console.WriteLine($"Clicked..{Checked}");

    StateHasChanged();
}

RenderFragment Icon
{
    get => builder =>
    {
        builder.OpenComponent<FavoriteBorderIcon>(0);
        builder.CloseComponent();
    };
}

RenderFragment CheckedIcon
{
    get => builder =>
    {
        builder.OpenComponent<FavoriteIcon>(0);
        builder.CloseComponent();
    };
}
}