@namespace Skclusive.Material.Docs
@inherits MaterialComponentBase

<Markdown
    Class="@_Class"
    Style="@_Style"
    Text="@(@"
```css
<style>
    .styled-menu-item:focus {
        background-color: var(--theme-palette-primary-main, #90caf9);
    }
    .styled-menu-item:focus .ListItemIcon-Root, .styled-menu-item:focus .ListItemText-Primary {
        color: var(--theme-palette-common-white, #fff);
    }
</style>
```

```html
<div>
    <Button
        aria-controls=""customized-menu""
        aria-haspopup=""true""
        Variant=""@ButtonVariant.Contained""
        Color=""@Color.Primary""
        OnClick=""@OnOpen""
        RootRef=""@ButtonRef"">
        Open Menu
    </Button>
    <Menu
        Id=""customized-menu""
        PaperStyle=""border: 1px solid #d3d4d5""
        Elevation=""0""
        AnchorVerticalOrigin=""@VerticalOrigin.Bottom""
        AnchorHorizontalOrigin=""@HorizontalOrigin.Center""
        TransformVerticalOrigin=""@VerticalOrigin.Top""
        TransformHorizontalOrigin=""@HorizontalOrigin.Center""
        Open=""@Open""
        KeepMounted
        AnchorRef=""@ButtonRef""
        OnClose=""@HandleClose"">
        <MenuItem
            Class=""styled-menu-item"">
            <ListItemIcon>
                <SendIcon
                    FontSize=""@FontSize.Small"" />
            </ListItemIcon>
            <ListItemText
                Primary=""Sent mail"" />
        </MenuItem>
        <MenuItem
            Class=""styled-menu-item"">
            <ListItemIcon>
                <DraftsIcon
                    FontSize=""@FontSize.Small"" />
            </ListItemIcon>
            <ListItemText
                Primary=""Drafts"" />
        </MenuItem>
        <MenuItem
            Class=""styled-menu-item"">
            <ListItemIcon>
                <InboxIcon
                    FontSize=""@FontSize.Small"" />
            </ListItemIcon>
            <ListItemText
                Primary=""Inbox"" />
        </MenuItem>
    </Menu>
</div>
```

```csharp
@code
{
    private bool Open { set; get; }

    private IReference ButtonRef { set; get; } = new Reference();

    private void HandleClose(EventArgs args)
    {
        Open = false;

        StateHasChanged();
    }

    private void HandleClose(MenuCloseReason reason)
    {
        Open = false;

        StateHasChanged();
    }

    private void OnOpen()
    {
        Open = true;

        StateHasChanged();
    }
}
```
")" />