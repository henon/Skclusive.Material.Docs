@namespace Skclusive.Material.Docs

<Grid
    Style="flex-grow: 1;"
    Container
    Spacing="@Spacing.Two">
    <Grid
        Item
        ExtraSmall="@GridSize.Twelve">
        <Grid
            Container
            Justify="@Justify.Center"
            Spacing="@Spacing">
            @foreach(var index in Enumerable.Range(0, 3))
            {
                <Grid
                    @key="index"
                    Item>
                    <Paper
                        Style="height: 140px; width: 100px;" />
                </Grid>
            }
        </Grid>
    </Grid>
    <Grid
        Item
        ExtraSmall="@GridSize.Twelve">
        <Paper
            Style="padding: 16px;">
            <Grid
                Container>
                <Grid
                    Item>
                    <FormLabel>spacing</FormLabel>
                    @foreach(var value in Enum.GetValues(typeof(Spacing)).Cast<Spacing>())
                    {
                        <FormControlLabel
                            @key="value"
                            Label="@value.ToString()">
                            <ControlContent>
                                <Radio
                                    Checked="@(Spacing == value)"
                                    Value="@value.ToString()"
                                    OnChange="@OnChange" />
                            </ControlContent>
                        </FormControlLabel>
                    }
                </Grid>
            </Grid>
        </Paper>
    </Grid>
</Grid>

@code
{
    private Spacing Spacing { set; get; } = Spacing.Two;

    private void OnChange(ChangeEventArgs args)
    {
        if (Enum.TryParse(args.Value.ToString(), out Spacing spacing))
        {
            Spacing = spacing;

            StateHasChanged();
        }
    }
}