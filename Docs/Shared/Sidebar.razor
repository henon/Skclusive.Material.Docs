<Drawer Open="@Open" 
        OnClose="@OnClose" 
        Anchor="@Placement.Start"
        Variant="@DrawerVariant.Persistent"
        Style="flex-shrink: 0;"
        PaperStyle="width: 240px;">
    <div class="Toolbar-Regular drawer-header">
        <IconButton OnClick="@OnClose">
             <ChevronLeftIcon />
        </IconButton>
    </div>
    <Divider />
    <List>
        <ChildContent>
            @foreach(var link in Links)
            {
                <ListItem @key="link.Item2" NoWrap>
                    <NavLink class="@context.Class" style="@(context.Style + ";color: inherit;")" href="@link.Item2" Match="@(link.Item4 ? NavLinkMatch.All : NavLinkMatch.Prefix)">
                        <ListItemIcon>
                            @link.Item3
                        </ListItemIcon>
                        <ListItemText Primary="@link.Item1" />
                    </NavLink>
                </ListItem>
            }
        </ChildContent>
    </List>
</Drawer>

@code
{
    [Parameter]
    public bool Open { set; get; }

    [Parameter]
    public Action OnClose { set; get; }

    private List<(string, string, RenderFragment, bool)> Links = new List<(string, string, RenderFragment, bool)>
    {
        ("Home", "", @<HomeIcon />, true),

        ("Grid", "grid",  @<ViewCompactIcon />, false),

        ("Portal", "portal",  @<FileCopyIcon />, false),

        ("Badge", "badge",  @<NotificationImportantIcon />, false),

        ("List", "list",  @<ListIcon />, false),

        ("Button", "button",  @<HomeIcon />, false),

        ("Card", "card",  @<PaymentIcon />, false),

        ("Table", "table",  @<TocIcon />, false),

        ("Progress", "progress",  @<LoopIcon />, false),

        ("Dialog", "dialog",  @<AnnouncementIcon />, false),

        ("Menu", "menu",  @<ListIcon />, false),

        ("Tab", "tab",  @<PaymentIcon />, false),

        ("Popover", "popover",  @<TocIcon />, false),

        ("FullScreen", "fulldialog",  @<FullscreenIcon />, false),

        ("Selection", "selection",  @<SelectAllIcon />, false),

        ("Text", "text",  @<TextFieldsIcon />, false),

        ("Transition", "transition",  @<DriveEtaIcon />, false),

        ("Transition Group", "transitiongroup",  @<CommuteIcon />, false)
    };
}